// Param√®tre l
real l = 0;
int n = 2;
int gamma = 1;
int omega = 2;

// definition des \delta O_2
border O2bottom(t=sqrt(3)*0.5,2){x = t; y = -0.5; label = omega;};//cote inferieur 
border O2right(t=-0.5,0.5) {x = 2; y = t; label = omega;};//cote droit 
border O2top(t=2,sqrt(3)*0.5) {x = t; y = 0.5; label = omega;};//cote superieur

// definition de \Gamma_2
border G2left(t=0.5,-0.5){x = l; y = t; label = gamma;} //cote gauche
border G2top(t=sqrt(3)*0.5,l){x = t; y = 0.5; label = gamma;} //cote superieur
border G2bottom(t=l,sqrt(3)*0.5){x = t; y = -0.5; label = gamma;}

// definition de \delta O_1
border O1circle(t=(pi/6),11*(pi/6)){x = cos(t); y = sin(t); label = omega;};

// definition de \Gamma_1
border G1circle(t=-(pi/6),(pi/6)){x = cos(t); y = sin(t); label = gamma;};

border C(t=0, 2*pi){x=0.2*cos(t); y=0.2*sin(t); label=2;}

// definition de la grille
mesh Th = buildmesh(O1circle(50*n) + G1circle(10*n) +C(10));
mesh th = buildmesh(O2bottom(10*n) + O2right(10*n) + O2top(10*n) + G2left(10*n) + G2bottom(10*n) + G2top(10*n));
// plot(TH,th, wait=1);

// espace element fini p1
fespace Vh(th, P1);

fespace VH(Th, P1);

Vh<complex> v,w;
randinit(900);
Vh wallreflexion = randreal1();
Vh<complex> wallabsorption = randreal1()*0.5i;
Vh k = 6;

VH<complex> V, W;
VH Wallreflexion = randreal1();
VH<complex> Wallabsorption = randreal1()*0.5i;
VH K = 80;
/*
cout << "Reflexion of walls : " << wallreflexion << "\n";
cout << "Absorption of walls : " << wallabsorption << "\n";
*/
problem muwave(v,w) =
    int2d(th)(
          (v*w*k^2)/(1+(wallreflexion+wallabsorption)*0)^2
        - (dx(v)*dx(w)+dy(v)*dy(w))
    )
    + on(2, v=1)
    + on(gamma, v=V)
    ;

problem WUVAVE(V,W) =
    int2d(Th)(
          (V*W*K^2)/(1+(Wallreflexion+Wallabsorption))^2
        - (dx(V)*dx(W)+dy(V)*dy(W))
    )
    + on(gamma, V=v)
    + on(2, V=1)
    ;

for (int i=0; i<150; i++){ 
muwave;
WUVAVE;
VH VM = real(V)^2 + imag(V)^2;
Vh vm = real(v)^2 + imag(v)^2;
plot(vm, VM, wait=1, fill=0, value=1, nbiso=65);
}